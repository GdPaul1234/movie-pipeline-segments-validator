# Generated by deepseek-r1:32b

import unittest
from pathlib import Path
from tempfile import TemporaryDirectory

from movie_pipeline_segments_validator.domain.media_path import MediaPath


class TestMediaPath(unittest.TestCase):
    def setUp(self):
        self.temp_dir = TemporaryDirectory()
        self.media_file = Path(self.temp_dir.name) / "test_file.txt"
        self.media_file.touch()

    def tearDown(self):
        self.temp_dir.cleanup()

    def test_initialization_creates_path_object(self):
        """Verify that initialization creates a valid Path object"""
        media = MediaPath(self.media_file)
        self.assertIsInstance(media.path, Path)

    def test_state_when_metadata_missing(self):
        """Test state when no metadata file exists"""
        media = MediaPath(self.media_file)
        self.assertEqual(media.state, 'waiting_metadata')

    def test_state_with_metadata_but_no_segment(self):
        """Test state when only metadata file exists"""
        (self.media_file.with_suffix('.txt.metadata.json')).touch()
        media = MediaPath(self.media_file)
        self.assertEqual(media.state, 'no_segment')

    def test_state_with_metadata_and_segments(self):
        """Test state when both metadata and segments files exist but no review"""
        (self.media_file.with_suffix('.txt.metadata.json')).touch()
        (self.media_file.with_suffix('.txt.segments.json')).touch()
        media = MediaPath(self.media_file)
        self.assertEqual(media.state, 'waiting_segment_review')

    def test_state_with_completed_review(self):
        """Test state when segments have been reviewed"""
        (self.media_file.with_suffix('.txt.metadata.json')).touch()
        (self.media_file.with_suffix('.txt.segments.json')).touch()
        (self.media_file.with_suffix('.txt.yml')).touch()
        media = MediaPath(self.media_file)
        self.assertEqual(media.state, 'segment_reviewed')

    def test_state_with_processed_media(self):
        """Test state when processing is complete"""
        (self.media_file.with_suffix('.txt.metadata.json')).touch()
        (self.media_file.with_suffix('.txt.segments.json')).touch()
        (self.media_file.with_suffix('.txt.yml.done')).touch()
        media = MediaPath(self.media_file)
        self.assertEqual(media.state, 'media_processed')

    def test_state_during_processing(self):
        """Test state when processing is in progress"""
        (self.media_file.with_suffix('.txt.metadata.json')).touch()
        (self.media_file.with_suffix('.txt.segments.json')).touch()
        (self.media_file.with_suffix('.txt.pending_yml_1739740572')).touch()
        media = MediaPath(self.media_file)
        self.assertEqual(media.state, 'media_processing')


if __name__ == '__main__':
    unittest.main()
